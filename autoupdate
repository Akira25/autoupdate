#!/bin/ash

#load config file
. /etc/config/autoupdate


#do backup
read -p "Do you want to do a backup? (y/n): " BACKUP
if [ $BACKUP = "y" ]; then
  if [ "$CLIENT_NAME" = "complete-hostname" ] && [ "$CLIENT_USER" = "user" ] && [ "$CLIENT_PATH" = "/complete/path/to/your/backups/" ]; then
    echo ""
    echo "You must specify some settings for this feature."
    echo "Have a look at: /etc/config/autoupdate"
    exit 1
  fi

  #backup the current router settings
  TODAY=$(date -u +%Y-%m-%d)
  HOSTNAME=$(uci -q get system.@system[0].hostname)
  sysupgrade -b "$PATH_BAK"
  scp "$PATH_BAK" "$CLIENT_USER""@$CLIENT_NAME"":$CLIENT_PATH""$TODAY""_$HOSTNAME"".tar.gz"

elif [ $BACKUP != "y" -a $BACKUP != "n" ]; then
  echo "Error: Input is neither 'y' nor 'n'"
  echo "Please restart the script..."
  exit 1

fi


if [ $? == 1 ]; then
  echo ""
  echo "ERROR: Backup failed. The values given in the config file may be incorrect."
  echo ""
fi


#get router model
if [ "$ROUTER" = "" ]; then
  ROUTER=$(grep machine /proc/cpuinfo | cut -d':' -f 2 | cut -c 2-)
fi

#get uplinktype. Tunneldigger routers get an ip-adress from 172.31.230.111/20 on ffuplink
A=$(ip addr show ffuplink | grep "172.31.")
if [ -n "$A" ]; then
  TYPE="tunneldigger"
else
  TYPE="default"
fi


echo ""
echo "Router model is: $ROUTER"
echo "Routers uplink is: $TYPE"
echo ""


read -p "Does the recognised router model match with the model given on the back of the router? (y/n): " C
if [ "$C" = "n" ]; then
  echo "Auto recognition failed. Please download the right firmware yourself"
  echo ""
  exit 1
fi
if [ "$C" != "y" -a "$C" != "n" ]; then
  echo "No valid input found. Exiting programm ..."
  echo ""
  exit 1
fi


echo "Get the link definition file..."
wget -q $JSON_LINK -O $PATH_JSON

if [ ! -e $PATH_JSON ]; then
  echo "Link definition file cannot be downloaded. Internet connection might be lost."
  echo ""
  exit 1
  else
  echo "Completed."
fi


#parse links for firmware from json-file
. /usr/share/libubox/jshn.sh

JSON=$(cat $PATH_JSON)

json_load "$JSON"
json_get_var JDATE date
json_select "$ROUTER"
json_get_var LINK $TYPE

if [ -z "$LINK" ]; then
  echo "This router model is (currently) not supported by this script. Please upgrade manually."
  echo ""
  #logger -t "autoupgrade" "no upgrade done. This router is not supported by autoupgrade."
  exit 0
fi

#check if there happened any changes in the link-file
TODAY=$(date -u +%Y%m%d)
if [ -f $LOG_FILE ]; then
  LST_UPGRADE=$(cat $LOG_FILE | cut -c 21-)
  else
  touch $LOG_FILE
  echo "Last upgrade was on 19700101" > $LOG_FILE
  LST_UPGRADE=$(cat $LOG_FILE | cut -c 21-)
fi

if [ $JDATE -ge $LST_UPGRADE ]; then
  #echo "Last upgrade was on $TODAY" > $LOG_FILE

  echo "Get firmware file..."
  wget $LINK -O $PATH_BIN

  echo ""
  read -p "Please confirm the upgrade by typing 'yes': " B
  if [ "$B" != "yes" ];then
    echo "ERROR: Input is not 'yes'."
    echo "You may upgrade your Router manually using:"
    echo ""
    echo "sysupgrade $PATH_BIN"
    echo ""
    echo "Extiting programm..."
    exit 1
  fi

  echo ""
  echo "Start flashing the image now."

  sysupgrade $PATH_BIN

  else
  echo "No new firmware avaiable."
  #logger -t "autoupgrade" "No Upgrade done. Link definition file did not change since last upgrade."
  exit 0
fi

